# Test the function ``lazy_matrix_mul``
test with the command python3 -m doctest -v ./tests/100-lazy_matrix_mul.txt

============================================================================

>>> lazy_matrix_mul = __import__('lazy_matrix_mul').lazy_matrix_mul

============================================================================

SUCCESS CASES:


Test with multiplying two 2x2 matrices:

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
matrix([[19, 22],
        [43, 50]])



Test  with multiplying a 2x3 matrix by a 3x2 matrix:

>>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
matrix([[ 58,  64],
        [139, 154]])





CASES ON FAILURE:


Attempt to multiply a scalar by a matrix:

>>> lazy_matrix_mul(1, [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: Scalar operands are not allowed, use '*' instead



Attempt to multiply matrices of incompatible dimensions:

>>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[5, 6], [7, 8]])
Traceback (most recent call last):
...
ValueError: setting an array element with a sequence.



Attempt to multiply using a matrix containing a non-numeric type:

>>> lazy_matrix_mul([["a", 2], [3, 4]], [[5, 6], [7, 8]])
Traceback (most recent call last):
...
TypeError: invalid data type for einsum



Attempt to multiply using an empty matrix:

>>> lazy_matrix_mul([], [[5, 6], [7, 8]])
Traceback (most recent call last):
...
ValueError: setting an array element with a sequence.
