# test the file 7-base_geometry
test with the command python3 -m doctest -v ./tests/7-base_geometry.txt

============================================================================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

============================================================================

SUCCESS CASES:


Attempt to create a BaseGeometry instance and validate a correct integer:

>>> bg = BaseGeometry()
>>> bg.integer_validator("int", 3)





CASES ON FAILURE:


Attempt to validate a negative integer, which should fail:

>>> bg = BaseGeometry()
>>> bg.integer_validator("int", -4)
Traceback (most recent call last):
...
ValueError: int must be greater than 0



Attempt to validate a float, expecting an integer type, which should fail:

>>> bg = BaseGeometry()
>>> bg.integer_validator("float", 5.85)
Traceback (most recent call last):
...
TypeError: float must be an integer



Attempt to call integer_validator without a value argument, which should fail:

>>> bg = BaseGeometry()
>>> bg.integer_validator("int")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'



Attempt to call integer_validator without any arguments, which should fail:

>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'



Attempt to validate None as an integer, which should fail:

>>> bg = BaseGeometry()
>>> bg.integer_validator("none", None)
Traceback (most recent call last):
...
TypeError: none must be an integer



Attempt to validate a string as an integer, which should fail:

>>> bg = BaseGeometry()
>>> bg.integer_validator("string", "hello")
Traceback (most recent call last):
...
TypeError: string must be an integer



Attempt to call integer_validator with extra arguments, which should fail:

>>> bg.integer_validator("int", 3, 5)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given



Attempt to call an unimplemented method 'area', which should raise an exception:

>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented



Attempt to validate zero, expecting a positive integer, which should fail:

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0



Attempt to validate a list as an integer, which should fail:

>>> bg = BaseGeometry()
>>> bg.integer_validator("list", [1, 2, 3])
Traceback (most recent call last):
...
TypeError: list must be an integer



Attempt to validate a tuple as an integer, which should fail:

>>> bg = BaseGeometry()
>>> bg.integer_validator("tuple", (1, 2))
Traceback (most recent call last):
...
TypeError: tuple must be an integer



Attempt to validate a set as an integer with a key 'age', which should fail:

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", {1, 2})
Traceback (most recent call last):
...
TypeError: age must be an integer



Attempt to validate a boolean as an integer, which should fail:

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer
